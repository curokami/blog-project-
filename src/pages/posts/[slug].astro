---
// ファイル: src/pages/posts/[slug].astro
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Icon from '../../components/Icon.astro';
import Markdown from '../../components/Markdown.astro'; // Markdown対応している場合のみ

// ✅ 動的ルーティング用に getStaticPaths を追加
export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts
    .filter((post) => post.data.draft !== true) // ✅ ドラフトを除外
    .map(post => ({
      params: { slug: post.slug },
    }));
}

const { slug } = Astro.params;
const post = await getCollection('posts').then(posts =>
  posts.find((p) => p.slug === slug)
);

// ✅ ドラフトは表示させない
if (!post || post.data.draft) {
  throw new Error(`Post not found or is draft: ${slug}`);
}
---

<Layout title={post.data.title}>

  <!-- ✅ 戻るボタン -->
  <a href="/blog" class="inline-flex items-center text-sm text-blue-600 hover:underline px-4 pt-4">
    ← Back to Blog
  </a>  

  <!-- ✅ カバー画像（トップに全面表示） -->
  {post.data.image && (
    <img
      src={post.data.image}
      alt={post.data.title}
      class="w-full h-64 sm:h-80 object-cover"
    />
  )}

  <article class="max-w-3xl mx-auto px-4 py-8">
    <!-- ✅ タイトル -->
    <h1 class="text-3xl sm:text-4xl font-bold text-gray-900 mb-2">{post.data.title}</h1>

    <!-- ✅ 著者・日付 -->
    <p class="text-sm text-gray-500 mb-6">
      By {post.data.author ?? 'Anonymous'} ・ Published on
      {post.data.pubDate.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      })}
    </p>

    <!-- ✅ 本文 -->
    <div class="prose prose-gray max-w-none text-[17px] leading-relaxed">
      <Markdown content={post.body} />
    </div>
  </article>
</Layout>