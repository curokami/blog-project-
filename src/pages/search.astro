---
import Layout from '../layouts/Layout.astro';
import PageHeader from '../components/PageHeader.astro';
import Footer from '../components/Footer.astro';
import Icon from '../components/Icon.astro';
---

<Layout title="Search">
  <PageHeader title="Search" />

  <main class="px-4 py-2">
    <div class="relative mb-4">
      <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
        <Icon name="search" className="w-5 h-5 text-gray-400" />
      </div>
      <input type="search" id="search-input" placeholder="Search..." class="w-full rounded-lg border-gray-300 py-3 pl-10 pr-4 text-gray-800 focus:ring-2 focus:ring-gray-400" />
    </div>

    <h2 class="text-xl font-bold mb-2">Results</h2>
    <div id="search-results" class="divide-y divide-gray-100"></div>
  </main>

  <Footer activePage="search" />

  <template id="result-item-template">
    <a href="" class="search-result-item flex items-center gap-4 p-4">
      <div class="w-24 h-24 flex-shrink-0">
        <img src="" alt="" class="w-full h-full object-cover rounded-lg search-result-image">
      </div>
      <div class="flex-1">
        <h3 class="font-bold text-gray-800 mb-1 leading-tight search-result-title"></h3>
        <p class="text-sm text-gray-500 mb-2 search-result-date"></p>
        <p class="text-sm text-gray-600 leading-relaxed search-result-description"></p>
      </div>
    </a>
  </template>

  <!-- ‚úÖ CDN„Åã„ÇâFuse.js„ÇíË™≠„ÅøËæº„Åø -->
  <script src="https://cdn.jsdelivr.net/npm/fuse.js/dist/fuse.min.js"></script>

  <!-- ‚úÖ inline script„Åß„ÅØ import Êñá„Çí‰Ωø„Çè„Å™„ÅÑ -->
  <script is:inline>
    window.addEventListener('DOMContentLoaded', () => {
      const searchInput = document.getElementById('search-input');
      const resultsContainer = document.getElementById('search-results');
      const itemTemplate = document.getElementById('result-item-template');

      if (!(searchInput instanceof HTMLInputElement)) throw new Error('search-input not found');
      if (!(resultsContainer instanceof HTMLElement)) throw new Error('search-results not found');
      if (!(itemTemplate instanceof HTMLTemplateElement)) throw new Error('result-item-template not found');

      let fuse;

      fetch('/api/search.json')
        .then(res => res.json())
        .then(data => {
          console.log("‚úÖ fetched data", data);

          fuse = new Fuse(data, {
            keys: ['title', 'description','body','tags'],
            includeScore: true,
            threshold: 0.4
          });

          searchInput.addEventListener('input', (e) => {
            const query = e.target?.value || '';
            resultsContainer.innerHTML = '';

            if (query.length < 2 || !fuse) return;

            const results = fuse.search(query);
            console.log("üîç query:", query);
            console.log("üîç results:", results);

            results.forEach(result => {
              const post = result.item;
              const clone = itemTemplate.content.cloneNode(true);
              const link = clone.querySelector('a');
              if (link) link.href = `/posts/${post.slug}`;
              const image = clone.querySelector('.search-result-image');
              if (image) {
                image.src = post.image || '/images/default.jpg';
                image.alt = post.title;
              }
              const titleElem = clone.querySelector('.search-result-title');
              if (titleElem) titleElem.textContent = post.title;
              const dateElem = clone.querySelector('.search-result-date');
              if (dateElem) {
                dateElem.textContent = `Published on ${new Date(post.pubDate).toLocaleDateString('en-US')}`;
              }
              const descElem = clone.querySelector('.search-result-description');
              if (descElem) descElem.textContent = post.description;
              resultsContainer.appendChild(clone);
            });
          });
        })
        .catch(err => console.error("‚ùå Fuse init error:", err));
    });
  </script>
</Layout>